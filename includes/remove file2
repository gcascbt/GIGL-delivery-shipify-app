
<?php
	
	// defined( 'ABSPATH' ) or die( 'Hey, what are you doing here? You silly human!' );
	
	// class WC_Gigl_Delivery_API
	// {
	// 	protected $env;
		
	// 	protected $login_credentials;
		
	// 	protected $request_url;
		
	// 	protected $shop;
		
	// 	public function __construct($shop = array())
	// 	{
	// 		$this->shop = $shop;
	// 		$settings = unserialize($shop['meta']);
	// 		$this->env = isset($settings['mode']) ? $settings['mode'] : 'Test';
			
	// 		if ($this->env == 'Live') {
	// 			$username    = isset($shop['live_key']) ? $shop['live_key'] : '';
	// 			$password = isset($shop['live_secret']) ? $shop['live_secret'] : '';    
				
				
	// 			$this->request_url = 'https://thirdparty.gigl-go.com/api/thirdparty/'; //'https://mobile.gigl-go.com/api/thirdparty/';

	// 			$this->sender_name = isset($settings['shipping_sender_name']) ? $settings['shipping_sender_name'] : '';
	// 			$this->sender_phone_number = isset($settings['shipping_sender_phone']) ? $settings['shipping_sender_phone'] : '';
	// 		} else {
	// 			$username    = isset($shop['test_key']) ? $shop['test_key'] : '';
	// 			$password = isset($shop['test_secret']) ? $shop['test_secret'] : '';
				
	// 			$this->request_url = 'https://giglthirdpartyapitestenv.azurewebsites.net/api/thirdparty/'; //'http://test.giglogisticsse.com/api/thirdparty/';

	// 			$this->sender_name = isset($settings['shipping_sender_name']) ? $settings['shipping_sender_name'] : '';
	// 			$this->sender_phone_number = isset($settings['shipping_sender_phone']) ? $settings['shipping_sender_phone'] : '';
	// 		}
			
	// 		$this->vendor_login($username, $password);
	// 	}
		
	// 	/**
	// 		* Call the Gigl Delivery Login API
	// 		*
	// 		* @param string $username
	// 		* @param string $password
	// 		* @return void
	// 	*/
	// 	public function vendor_login($username, $password)
	// 	{

	// 		$login_credentials = $this->shop['transact_token'];
	// 		// Transient expired or doesn't exist, fetch the data
	// 		if (empty($login_credentials) || $login_credentials == false) {
	// 			$params = array(
    //            'username'        => $username,
    //            'Password'     => $password,
    //            'SessionObj'    => "",
	// 			);
				
	// 			$response = $this->api_request(
    //             'login',
    //             $params
	// 			);
	// 			$login_credentials = $response;
				
	// 			//set transient
	// 			//set_transient('login_credentials_from_gigl_deleivery', $login_credentials, (HOUR_IN_SECONDS / 12)); // set transient for 5 mins to 9 mins
	// 			$update_token_id = update_token_($login_credentials);
	// 		}
			
	// 	 	$this->login_credentials = $login_credentials;

	// 	 }
	// 	public function update_token_($login_credentials){
	// 		include_once('function.php');
	// 		update_shop_token($login_credentials);
	// 	}
	// 	public function get_order_details($waybill)
	// 	{
	// 		$access_token = $this->login_credentials->Object->access_token;
	// 		$params = [];
			
	// 		return $this->api_request('TrackAllShipment/'.$waybill, $params, 'get', $access_token);
	// 	}
	// 	public function create_task($params)
	// 	{

	// 		$access_token = $this->login_credentials->Object->access_token;
	// 		$params['UserId'] = $this->login_credentials->Object->UserId;
	// 		$params['CustomerCode'] = $this->login_credentials->Object->UserName; 
    //      	$params['ReceiverStationId'] = "4";
    //       	$params['SenderStationId'] = "4";
			
	// 		return $this->api_request('captureshipment', $params, 'post', $access_token);
	// 	}
	// 	public function track_details($waybill)
	// 	{
	// 		$access_token = $this->login_credentials->Object->access_token;
	// 		$params = [];
			
	// 		return $this->api_request('TrackAllShipment/'.$waybill, $params, 'get', $access_token);
	// 	}
	// 	public function calculate_pricing($params)
	// 	{
	// 		$access_token = $this->login_credentials->Object->access_token;
	// 		$params['UserId'] = $this->login_credentials->Object->UserId;
	// 		$params['CustomerCode'] = $this->login_credentials->Object->UserName; 
    //      	$params['ReceiverStationId'] = "4";
    //       	$params['SenderStationId'] = "4";
			
	// 		return $this->api_request('price', $params, 'post', $access_token);
	// 	}
		
	// 	public function get_lat_lng($address)
	// 	{
	// 		$access_token = $this->login_credentials->Object->access_token;
	// 		$address = rawurlencode($address);
	// 		//$coordinate   = get_transient('gigl_delivery_addr_geocode_' . $address);
	// 		$coordinate = unserialize(get_user_address($address));
			

	// 		if (empty($coordinate)) {
	// 			$params = array('Address' => $address);
	// 			$geocodeResponse = $this->api_request('getaddressdetails', $params,'post',$access_token);
				
	// 		 	$coordinate['Latitude']  = $geocodeResponse->Object->Latitude;
	// 		 	$coordinate['Longitude'] = $geocodeResponse->Object->Longitude;
	// 		 	//set_transient('gigl_delivery_addr_geocode_' . $address, $coordinate, DAY_IN_SECONDS * 90);
	// 			create_address_cordinate($address);
	// 		}
			
	// 		return $coordinate;
	// 	}
		
	// 	/**
	// 		* Send HTTP Request
	// 		* @param string $endpoint API request path
	// 		* @param array $args API request arguments
	// 		* @param string $method API request method
	// 		* * @param string $token API request token
	// 		* @return JSON decoded transaction object. NULL on API error.
	// 	*/
	// 	public function api_request(
    //     $endpoint,
    //     $args = array(),
    //     $method = 'POST', $token = NULL
	// 	) {
	// 		 $uri = "{$this->request_url}{$endpoint}";
	// 			 $arg = array(
	// 			 	'method'      => $method,
    //     			'timeout'     => 45,
    //     			'sslverify'   => false,
    //     			'headers'     => $this->get_headers($token),
    //     			'body'        => json_encode($args),

	// 			 );
	// 			$curl = curl_init($url);
	// 			curl_setopt($curl, CURLOPT_HEADER, true);
	// 			curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
	// 			curl_setopt($curl, CURLOPT_FOLLOWLOCATION, true);
	// 			curl_setopt($curl, CURLOPT_MAXREDIRS, 3);
	// 			curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);
		
	// 			curl_setopt($curl, CURLOPT_TIMEOUT, 45);
	// 			curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 45);
	// 			curl_setopt($curl, CURLOPT_CUSTOMREQUEST, $method);
	// 			curl_setopt($curl, CURLOPT_HTTPHEADER, $this->get_headers($token),);
		
	// 			if( $method != 'GET' && in_array($method, array('POST', 'PUT'))) {
	// 				if( is_array($args) ) $query = json_encode($args);
	// 				curl_setopt($curl, CURLOPT_POSTFIELDS, $args);
	// 			}
		
	// 			$response = curl_exec($curl);
	// 			$error = curl_errno($curl);
	// 			$error_msg = curl_error($curl);
		
	// 			curl_close($curl);
	// 			if($error) {
	// 				return $error_msg;
	// 			} else {
	// 				$response = json_decode($response, true);
	// 				return $response;
	// 			}
			 
			
	// 	}
		
	// 	/**
	// 		* Generates the headers to pass to API request.
	// 	*/
	// 		public function get_headers($token)
	// 	{
	// 		if(!empty($token)){
	// 			$getHead = array(
    //         'Authorization' => "Bearer {$token}",
    //         'Content-Type'  => 'application/json',
    //     );
	// 		}else{
	// 			$getHead = array('Content-Type'  => 'application/json',);
	// 		}

	// 		return $getHead;
			
	// 	}

	// }
